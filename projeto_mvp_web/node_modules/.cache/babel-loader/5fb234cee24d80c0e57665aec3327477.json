{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos Henrique\\\\Documents\\\\GitHub\\\\provaAV2_web\\\\projeto_mvp_web\\\\src\\\\pages\\\\chat\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { UsuarioContext } from '../../context/user';\nimport firebaseApp from \"../../services/firebase\";\nimport { getFirestore, addDoc, collection, onSnapshot, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const db = getFirestore(firebaseApp);\n  const {\n    user,\n    signOut\n  } = useContext(UsuarioContext);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const unsub = onSnapshot(query(collection(db, \"mensagens\"), where(\"lido\", \"!=\", true)), querySnapshot => {\n      const tmp = [];\n      querySnapshot.forEach(async document => {\n        tmp.push({\n          id: document.id,\n          ...document.data()\n        });\n      });\n      setMessages(tmp);\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n\n  async function handleMessage() {\n    try {\n      await addDoc(collection(db, 'mensagens'), {\n        mensagem: \"ola\",\n        lido: false\n      });\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat \", user ? user.email : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        handleMessage();\n      },\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        signOut();\n      },\n      children: \"Sair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"jbj0A84a20X20+cM7sHzwAgOLSQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Carlos Henrique/Documents/GitHub/provaAV2_web/projeto_mvp_web/src/pages/chat/index.js"],"names":["React","useContext","useState","useEffect","UsuarioContext","firebaseApp","getFirestore","addDoc","collection","onSnapshot","query","where","Chat","db","user","signOut","messages","setMessages","unsub","querySnapshot","tmp","forEach","document","push","id","data","handleMessage","mensagem","lido","err","console","warn","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AAEA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,KAAvD,EAA8DC,KAA9D,QAA2E,oBAA3E;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,EAAE,GAAGP,YAAY,CAACD,WAAD,CAAvB;AAEA,QAAM;AAACS,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBd,UAAU,CAACG,cAAD,CAAjC;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMe,KAAK,GAAGT,UAAU,CAACC,KAAK,CAACF,UAAU,CAACK,EAAD,EAAK,WAAL,CAAX,EAA6BF,KAAK,CAAC,MAAD,EAAQ,IAAR,EAAa,IAAb,CAAlC,CAAN,EAA6DQ,aAAD,IAAiB;AACjG,YAAMC,GAAG,GAAG,EAAZ;AAEAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,MAAOC,QAAP,IAAmB;AACrCF,QAAAA,GAAG,CAACG,IAAJ,CAAS;AACLC,UAAAA,EAAE,EAAEF,QAAQ,CAACE,EADR;AAEL,aAAGF,QAAQ,CAACG,IAAT;AAFE,SAAT;AAIH,OALD;AAMAR,MAAAA,WAAW,CAACG,GAAD,CAAX;AACH,KAVuB,CAAxB;AAYA,WAAO,MAAK;AACRF,MAAAA,KAAK;AACR,KAFD;AAIH,GAjBQ,EAiBP,EAjBO,CAAT;;AAmBA,iBAAeQ,aAAf,GAA+B;AAC3B,QAAI;AACA,YAAMnB,MAAM,CAACC,UAAU,CAACK,EAAD,EAAI,WAAJ,CAAX,EAA4B;AACpCc,QAAAA,QAAQ,EAAE,KAD0B;AAEpCC,QAAAA,IAAI,EAAE;AAF8B,OAA5B,CAAZ;AAIH,KALD,CAKE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA,0BACUf,IAAI,GAAEA,IAAI,CAACkB,KAAP,GAAc,EAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAI;AAACN,QAAAA,aAAa;AAAG,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAI;AAACX,QAAAA,OAAO;AAAG,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAnDQH,I;;KAAAA,I;AAqDT,eAAeA,IAAf","sourcesContent":["import React,{useContext,useState, useEffect} from \"react\";\r\n\r\nimport {UsuarioContext} from '../../context/user';\r\n\r\nimport firebaseApp from \"../../services/firebase\";\r\n\r\nimport { getFirestore, addDoc, collection, onSnapshot, query, where } from \"firebase/firestore\";\r\nfunction Chat() {\r\n    \r\n    const db = getFirestore(firebaseApp);\r\n\r\n    const {user,signOut} = useContext(UsuarioContext);\r\n    \r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const unsub = onSnapshot(query(collection(db, \"mensagens\"),where(\"lido\",\"!=\",true)),(querySnapshot)=>{\r\n            const tmp = [];\r\n\r\n            querySnapshot.forEach(async (document)=> {\r\n                tmp.push({\r\n                    id: document.id,\r\n                    ...document.data()\r\n                })\r\n            })\r\n            setMessages(tmp)\r\n        });\r\n\r\n        return ()=> {\r\n            unsub()\r\n        }\r\n\r\n    },[])\r\n\r\n    async function handleMessage() {\r\n        try {\r\n            await addDoc(collection(db,'mensagens'),{\r\n                mensagem: \"ola\",\r\n                lido: false\r\n            })\r\n        } catch (err) {\r\n            console.warn(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Chat {user? user.email :''}\r\n            </h1>\r\n            <button type=\"button\" onClick={()=>{handleMessage()}}>\r\n                Enviar\r\n            </button>\r\n            <button type=\"button\" onClick={()=>{signOut()}}>\r\n                Sair\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}